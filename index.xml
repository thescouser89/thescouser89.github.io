<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bonzour</title>
    <link>http://dustin.lakaz.org/</link>
    <description>Recent content on Bonzour</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Oct 2019 10:54:20 -0400</lastBuildDate>
    
	<atom:link href="http://dustin.lakaz.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Extract_crt_from_keystore</title>
      <link>http://dustin.lakaz.org/2019/10/28/extract_crt_from_keystore/</link>
      <pubDate>Mon, 28 Oct 2019 10:54:20 -0400</pubDate>
      
      <guid>http://dustin.lakaz.org/2019/10/28/extract_crt_from_keystore/</guid>
      <description>To extract a &amp;lsquo;.crt&amp;rsquo; file from a Java keystore, it seems that I have to do the following:
 List the certs in the keystore
keytool -list -v -keystore &amp;lt;keystore.jks&amp;gt;  Note the alias of the relevant crt you want to export
 Extract the crt from the keystore
keytool -export -alias &amp;lt;alias&amp;gt; -keystore &amp;lt;keystore.jks&amp;gt; -file temp.crt  Transform the binary (?) crt into a pem file
openssl x509 -inform DER -in temp.</description>
    </item>
    
    <item>
      <title>Quarkus is awesome</title>
      <link>http://dustin.lakaz.org/2019/09/08/quarkus-is-awesome/</link>
      <pubDate>Sun, 08 Sep 2019 00:08:34 -0400</pubDate>
      
      <guid>http://dustin.lakaz.org/2019/09/08/quarkus-is-awesome/</guid>
      <description>I&amp;rsquo;ve been playing with Quarkus a lot at work lately. It&amp;rsquo;s really impressive how familiar it is with the Java EE annotations, yet has just about enough enhancements to make the developer experience so much better!
An example would be the @QuarkusTest annotation for testing. It scaffolds everything for you to get a running Quarkus app to run your integration tests. I don&amp;rsquo;t even know how to get the same setup running on EAP or Wildfly.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://dustin.lakaz.org/about/</link>
      <pubDate>Sat, 07 Sep 2019 22:55:00 -0400</pubDate>
      
      <guid>http://dustin.lakaz.org/about/</guid>
      <description>I&amp;rsquo;m a poor lonesome cowboy</description>
    </item>
    
    <item>
      <title>PackageKit Memory Cleanup</title>
      <link>http://dustin.lakaz.org/2017/01/23/packagekit-memory-cleanup/</link>
      <pubDate>Mon, 23 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://dustin.lakaz.org/2017/01/23/packagekit-memory-cleanup/</guid>
      <description>I&amp;rsquo;ve been using Fedora for a while now and have upgraded from Fedora 24 to Fedora 25 without any issues. I&amp;rsquo;ve noticed that my root partition (I also have a separate one for /home) kept getting filled up and I wasn&amp;rsquo;t really sure why. I have finally run du -sh like a madman trying to figure out which folder was eating all my precious HD space. It turns out it was PackageKit&amp;rsquo;s fault&amp;hellip;</description>
    </item>
    
    <item>
      <title>Java EE Authentication with Curl</title>
      <link>http://dustin.lakaz.org/2015/01/06/java-ee-authentication-with-curl/</link>
      <pubDate>Tue, 06 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://dustin.lakaz.org/2015/01/06/java-ee-authentication-with-curl/</guid>
      <description>If you&amp;rsquo;ve always wondered how to authenticate to a standard Java EE authentication form using the curl command, this page is for you!
 First we&amp;rsquo;ll obtain a session id from the server.  curl -v -c cookies.txt http://localhost/login/index.jsp The session id will be stored as a cookie in the file cookies.txt.
 Next we&amp;rsquo;ll use the session id to authenticate the user.  curl -L -v -b cookies.txt \  -d &amp;#39;j_username=&amp;lt;username&amp;gt;&amp;amp;j_password=&amp;lt;password&amp;gt;&amp;#39; \  http://localhost/login/j_security_check  Finally once the session id is authenticated, we can use it to do secured operations.</description>
    </item>
    
  </channel>
</rss>